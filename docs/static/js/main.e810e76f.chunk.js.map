{"version":3,"sources":["firebase/firebase-config.js","components/notes/NotesAppBar.js","components/notes/NotePage.js","types/types.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/SideBar.js","components/journal/JournalPage.js","hooks/useForm.js","components/auth/LoginPage.js","components/auth/RegisterPage.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","googleAuthProvider","auth","GoogleAuthProvider","NotesAppBar","className","NotePage","type","placeholder","src","alt","types","setError","error","payload","finishLoading","loginManager","email","password","dispatch","signInWithEmailAndPassword","then","user","login","uid","displayName","catch","Swal","fire","message","logout","JournalEntry","JournalEntries","map","value","key","SideBar","useDispatch","onClick","a","signOut","JournalPage","useForm","inicialState","useState","values","setValues","cleanInput","handleInputChange","target","name","LoginPage","loading","useSelector","state","ui","formValues","onSubmit","e","preventDefault","onChange","disabled","signInWithPopup","to","RegisterPage","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","registerManager","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","setIsAuthenticated","useEffect","onAuthStateChanged","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e810e76f.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCzG7jcYHzIOhXRqZRiH_xn_-DyVHekLuI\",\r\n    authDomain: \"react-firebase-ef893.firebaseapp.com\",\r\n    databaseURL: \"https://react-firebase-ef893.firebaseio.com\",\r\n    projectId: \"react-firebase-ef893\",\r\n    storageBucket: \"react-firebase-ef893.appspot.com\",\r\n    messagingSenderId: \"82368233926\",\r\n    appId: \"1:82368233926:web:0ff94d223d7e7da83e32c7\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore()\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider()\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","import React from 'react'\r\n\r\nexport const NotesAppBar = () => {\r\n    return (\r\n\r\n        <div className=\"notes__appbar\">\r\n            <span>28 de agosto 2020</span>\r\n            <div>\r\n                <button className=\"btn\">Picture</button>\r\n                <button className=\"btn\">Save</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NotePage = () => {\r\n\r\n    return (\r\n\r\n        <div className=\"notes__main-content\">\r\n\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n                <input type=\"text\" className=\"notes__title-input\" placeholder=\"Some awesome title\" />\r\n                <textarea className=\"notes__textarea\" placeholder=\"An awesome text\">\r\n\r\n                </textarea>\r\n                <div className=\"notes__image\">\r\n                    <img src=\"https://this.deakin.edu.au/wp-content/uploads/2019/06/coding-on-a-computer.jpg\" alt=\"imagen\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","export const types = {\r\n\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading'\r\n}","import { types } from \"../types/types\"\r\n\r\nexport const setError = ( error ) => {\r\n   \r\n    return {\r\n        type: types.uiSetError,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const removeError = () => {\r\n   \r\n    return {\r\n        type: types.uiRemoveError,\r\n    }\r\n}\r\n\r\nexport const startLoading = () => {\r\n\r\n    return {\r\n        type: types.uiStartLoading,\r\n    }\r\n}\r\n\r\nexport const finishLoading = () => {\r\n\r\n    return {\r\n        type: types.uiFinishLoading,\r\n    }\r\n}\r\n","import Swal from 'sweetalert2'\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { types } from '../types/types'\r\nimport { finishLoading, startLoading } from './ui';\r\n\r\nexport const loginManager = (email, password) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        dispatch( startLoading() )\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then( ({ user }) => {\r\n                \r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n                \r\n                dispatch( finishLoading() )\r\n                \r\n            })            \r\n            .catch(error => {\r\n                dispatch( finishLoading() )\r\n                Swal.fire('Authentication Error', error.message, 'error')\r\n        })\r\n    }\r\n}\r\n\r\nexport const registerManager = ( email, password, name) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then( async({ user }) => {\r\n                await user.updateProfile({\r\n                    displayName: name\r\n                })\r\n\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            })\r\n            .catch(error => {\r\n                Swal.fire('User already exists', error.message, 'error')\r\n            })\r\n    }\r\n}\r\n\r\nexport const googleLoginManager = () => {\r\n    \r\n    return (dispatch) => {\r\n\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then( ({ user }) => {\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            })\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => {\r\n\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n}\r\n\r\nexport const logoutManager = () => {\r\n\r\n    return async(dispatch) => {\r\n\r\n        await firebase.auth().signOut()\r\n\r\n        dispatch( logout() )\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n\r\n    return {\r\n        type: types.logout\r\n    }\r\n}","import React from 'react'\r\n\r\nexport const JournalEntry = () => {\r\n    \r\n    return (\r\n        <div className=\"journal__entry pointer\">\r\n\r\n            <div className=\"journal__entry-picture\">\r\n            </div>\r\n            \r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"jounral__entry-title\">Titulo</p>\r\n                <p className=\"jounral__entry-content\">Contenido del Entry</p>\r\n            </div>\r\n            \r\n            <div className=\"journal__entry-date\">\r\n                <span>Monday</span>\r\n                <h4>28</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { JournalEntry } from './JournalEntry'\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const entries = [1,2,3,4,5,6,7,8,9,10,11,12]\r\n\r\n    return (\r\n\r\n        <div className=\"journal__entries\">\r\n            {\r\n                entries.map( value => (\r\n                    <JournalEntry\r\n                        key={ value }\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { logoutManager } from '../../actions/auth'\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const SideBar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleLogout = () => {\r\n\r\n        dispatch( logoutManager() )\r\n    }\r\n\r\n    return (\r\n\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\" />\r\n                    <span> Nicolas</span>\r\n                </h3>\r\n\r\n                <button onClick={handleLogout} className=\"btn\">Logout</button>\r\n            </div>\r\n\r\n            <div className=\"journal__new-entry\">\r\n                <i className=\"far fa-calendar-plus fa-5x\" />\r\n                <p className=\"mt-5\">New Entry</p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { NotePage } from '../notes/NotePage'\r\n// import { NothingSelected } from './NothingSelected'\r\nimport { SideBar } from './SideBar'\r\n\r\nexport const JournalPage = () => {\r\n\r\n    return (\r\n\r\n        <div className=\"journal__main-content\">\r\n            <SideBar />\r\n        <main>\r\n            <NotePage />\r\n            {/* <NothingSelected /> */}\r\n        </main>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\nexport const useForm = ( inicialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState( inicialState )\r\n\r\n    const cleanInput = () => {\r\n        setValues( inicialState )\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n\r\n        })\r\n    }\r\n\r\n    return [ values, handleInputChange, cleanInput ]\r\n\r\n}","import React, { Fragment } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { googleLoginManager, loginManager } from '../../actions/auth'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const LoginPage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { loading } = useSelector(state => state.ui)\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: 'nicososa@gmail.com',\r\n        password: '123456'\r\n    })\r\n\r\n    const { email, password } = formValues\r\n\r\n    const handleLogin = (e) =>{\r\n        e.preventDefault()\r\n        \r\n        dispatch( loginManager(email, password) )\r\n    }\r\n\r\n    const googleLogin = () => {\r\n        \r\n        dispatch( googleLoginManager() )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <Fragment>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form onSubmit={ handleLogin } >\r\n                <input className=\"auth__input\" type=\"text\" name=\"email\" value={email} onChange={handleInputChange} placeholder=\"Email\" />\r\n                <input className=\"auth__input\" type=\"password\" name=\"password\" value={password} onChange={handleInputChange} placeholder=\"Password\" />\r\n\r\n                <button\r\n                    className=\"btn btn-primary btn-block\"\r\n                    type=\"submit\"\r\n                    disabled={loading}\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with Social Network</p>\r\n                    <div onClick={googleLogin} className=\"google-btn\">\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                    <Link className=\"link mt-1\" to=\"/auth/register\">Create new Account</Link>\r\n                </div>\r\n\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport validator from 'validator'\r\nimport { registerManager } from '../../actions/auth'\r\nimport { removeError, setError } from '../../actions/ui'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const RegisterPage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { msgError } = useSelector(state => state.ui)\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        name: 'Nicolas',\r\n        email: 'nicososa@gmail.com',\r\n        password: '123456',\r\n        password2: '123456'\r\n    })\r\n\r\n    const { name, email, password, password2 } = formValues\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault()\r\n        \r\n        if( isFormValid() ){\r\n            dispatch( registerManager(email, password, name))\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if( name.trim().length === 0 ){\r\n            dispatch( setError( 'Name is required' ))\r\n            return false\r\n        } else if( !validator.isEmail(email) ) {\r\n            dispatch( setError( 'Email is not correct' ))\r\n            return false\r\n        } else if( password !== password2 || password.length < 5 ){\r\n            dispatch( setError( 'Passwords missmatch' ))\r\n            return false\r\n        }\r\n\r\n        dispatch( removeError() )\r\n\r\n        return true\r\n    }\r\n\r\n    return (\r\n\r\n        <Fragment>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form onSubmit={handleRegister}>\r\n                {\r\n                    msgError &&\r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            <p>{msgError}</p>\r\n                        </div>  \r\n\r\n                    )\r\n                }\r\n\r\n                <input className=\"auth__input\" type=\"text\" name=\"name\" value={name} onChange={handleInputChange} placeholder=\"Name\" />\r\n                <input className=\"auth__input\" type=\"text\" name=\"email\" value={email} onChange={handleInputChange} placeholder=\"Email\" />\r\n                <input className=\"auth__input\" type=\"password\" name=\"password\" value={password} onChange={handleInputChange} placeholder=\"Password\" />\r\n                <input className=\"auth__input\" type=\"password2\" name=\"password2\" value={password2} onChange={handleInputChange} placeholder=\"Confirm Password\" />\r\n\r\n                <button\r\n                    className=\"btn btn-primary btn-block mt-1\"\r\n                    type=\"submit\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                <Link className=\"link mt-1\" to=\"/auth/login\">Already have an Account</Link>\r\n        \r\n\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { LoginPage } from '../components/auth/LoginPage'\r\nimport { RegisterPage } from '../components/auth/RegisterPage'\r\n\r\nexport const AuthRouter = () => {\r\n\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route exact path='/auth/login' component={ LoginPage } />\r\n                    <Route exact path='/auth/register' component={ RegisterPage } />\r\n\r\n                    <Redirect to='/auth/login' />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n\r\n    return (\r\n\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                (isAuthenticated)\r\n                    ? <Component {...props} />\r\n                    : <Redirect to=\"/auth\" />\r\n            )}\r\n\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n\r\n    return (\r\n\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                (!isAuthenticated)\r\n                    ? <Component {...props} />\r\n                    : <Redirect to=\"/\" />\r\n\r\n            )}\r\n\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom'\r\nimport { firebase } from '../firebase/firebase-config'\r\nimport { JournalPage } from '../components/journal/JournalPage'\r\nimport { AuthRouter } from './AuthRouter'\r\nimport { useDispatch } from 'react-redux'\r\nimport { login } from '../actions/auth'\r\nimport { PrivateRoute } from './PrivateRoute'\r\nimport { PublicRoute } from './PublicRoute'\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [checking, setChecking] = useState(true)\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false)\r\n\r\n    useEffect(() => {\r\n        \r\n        firebase.auth().onAuthStateChanged( (user) => {\r\n\r\n            if( user?.uid ){\r\n                dispatch( login( user.uid, user.displayName ) )\r\n                setIsAuthenticated(true)\r\n            } else {\r\n                setIsAuthenticated(false)\r\n            }\r\n\r\n            setChecking(false)\r\n        })\r\n    }, [dispatch, setChecking])\r\n\r\n    if( checking ) {\r\n        return (\r\n\r\n            <h1>Espere...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute path='/auth' isAuthenticated={ isAuthenticated } component={ AuthRouter } />\r\n                    <PrivateRoute exact path='/' isAuthenticated={ isAuthenticated } component={ JournalPage } />\r\n\r\n                    <Redirect to='/' />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        \r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer'\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = ( state = {}, action) => {\r\n    \r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n            \r\n        case types.logout:\r\n            return { }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const JournalApp = () => {\r\n\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\n\nimport './styles/styles.scss'\n\nReactDOM.render(<JournalApp /> ,document.getElementById('root'));"],"sourceRoot":""}