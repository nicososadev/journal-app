{"version":3,"sources":["firebase/firebase-config.js","helpers/fileUpload.js","helpers/loadNotes.js","types/types.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NotePage.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/SideBar.js","components/journal/JournalPage.js","components/auth/LoginPage.js","components/auth/RegisterPage.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","response","ok","json","cloudResponse","secure_url","loadNotes","uid","notes","collection","get","forEach","snapHijo","push","id","data","types","activeNote","note","type","payload","createNewNote","setNotes","saveNoteManager","dispatch","getState","state","url","noteToFireStore","doc","update","noteRefresh","Swal","fire","title","deleteNote","useForm","inicialState","useState","values","setValues","cleanInput","newFromState","handleInputChange","target","name","value","NotesAppBar","useDispatch","active","useSelector","className","onChange","e","files","text","allowOutsideClick","willOpen","showLoading","fileUrl","close","uploadManager","style","display","onClick","document","querySelector","click","NotePage","formValues","reset","activeId","useRef","useEffect","current","placeholder","src","alt","delete","NothingSelected","setError","error","finishLoading","loginManager","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","message","logout","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","key","SideBar","signOut","newNote","Date","getTime","add","JournalPage","LoginPage","loading","ui","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterPage","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","registerManager","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","setIsAuthenticated","onAuthStateChanged","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d3323630.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCzG7jcYHzIOhXRqZRiH_xn_-DyVHekLuI\",\r\n    authDomain: \"react-firebase-ef893.firebaseapp.com\",\r\n    databaseURL: \"https://react-firebase-ef893.firebaseio.com\",\r\n    projectId: \"react-firebase-ef893\",\r\n    storageBucket: \"react-firebase-ef893.appspot.com\",\r\n    messagingSenderId: \"82368233926\",\r\n    appId: \"1:82368233926:web:0ff94d223d7e7da83e32c7\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore()\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider()\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","export const fileUpload = async ( file ) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dsselcnmz/upload'\r\n\r\n    const formData = new FormData()\r\n\r\n    formData.append('upload_preset', 'react-journal-app')\r\n    formData.append('file', file)\r\n\r\n    try {\r\n        \r\n        const response = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n\r\n        if( response.ok ){\r\n            const cloudResponse = await response.json()\r\n            return cloudResponse.secure_url\r\n        } else {\r\n            \r\n            throw await response.json()\r\n        }\r\n\r\n    } catch (error) {\r\n\r\n        throw error\r\n    }\r\n}","import { db } from \"../firebase/firebase-config\"\r\n\r\nexport const loadNotes = async (uid) => {\r\n\r\n    const notes = []\r\n\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get()\r\n\r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    } )\r\n    \r\n    return notes\r\n}","export const types = {\r\n\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesCreateNote: '[Notes] Create Note',\r\n    notesUpdateNote: '[Notes] Update Note',\r\n    notesDeleteNote: '[Notes] Delete Note',\r\n    notesActive: '[Notes] Set Active Note',\r\n    notesLoad: '[Notes] Load Notes',\r\n    notesImgUrl: '[Notes] Note Image Url',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n\r\n}","import Swal from \"sweetalert2\"\r\nimport { db } from \"../firebase/firebase-config\"\r\nimport { fileUpload } from \"../helpers/fileUpload\"\r\nimport { loadNotes } from \"../helpers/loadNotes\"\r\nimport { types } from \"../types/types\"\r\n\r\nexport const createNote = () => {\r\n\r\n    return async(dispatch, getState) => {\r\n\r\n        const state = getState()\r\n\r\n        const { uid } = state.auth\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const document = await db.collection(`${uid}/journal/notes`).add(newNote)\r\n\r\n        dispatch( activeNote(document.id, newNote) )\r\n\r\n        dispatch( createNewNote(document.id, newNote) )\r\n\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) => {\r\n\r\n    return {\r\n        type: types.notesActive,\r\n        payload: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n}\r\n\r\nexport const createNewNote = (id, note) => {\r\n\r\n    return {\r\n        type: types.notesCreateNote,\r\n        payload: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n}\r\n\r\nexport const LoadNotesManager = (uid) => {\r\n\r\n    return async (dispatch) => {\r\n        \r\n        const notes = await loadNotes( uid )\r\n\r\n        dispatch( setNotes(notes) )\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes) => {\r\n\r\n    return {\r\n        type: types.notesLoad,\r\n        payload: notes\r\n    }\r\n}\r\n\r\nexport const saveNoteManager = ( note ) => {\r\n\r\n    return async (dispatch, getState) => {\r\n        \r\n        const state = getState()\r\n\r\n        const { uid } = state.auth\r\n\r\n        if( !note.url ){\r\n            delete note.url\r\n        }\r\n\r\n        const noteToFireStore = { ...note }\r\n\r\n        delete noteToFireStore.id\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update( noteToFireStore )\r\n\r\n        dispatch( noteRefresh( note.id, noteToFireStore ) )\r\n\r\n        Swal.fire('Saved', note.title, 'success')\r\n    }\r\n}\r\n\r\nexport const noteRefresh = ( id, note ) => {\r\n\r\n    return {\r\n        type: types.notesUpdateNote,\r\n        payload: {\r\n            id, \r\n            note: {\r\n                id,\r\n                ...note\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const uploadManager = ( file ) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const { active:activeNote } = getState().notes\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            willOpen: () => {\r\n                Swal.showLoading()\r\n            }\r\n        })\r\n        \r\n\r\n        const fileUrl = await fileUpload( file )\r\n\r\n        activeNote.url = fileUrl\r\n\r\n        dispatch( saveNoteManager( activeNote ) )\r\n\r\n        Swal.close()\r\n    }\r\n}\r\n\r\nexport const deleteManager = ( id ) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const state = getState()\r\n\r\n        const { uid } = state.auth\r\n\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete()\r\n\r\n        dispatch( deleteNote( id ) )\r\n    }\r\n}\r\n\r\nexport const deleteNote = ( id ) => {\r\n    return {\r\n        type: types.notesDeleteNote,\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const notesLogout = () => {\r\n    return{\r\n        type: types.notesLogoutCleaning\r\n    }\r\n}","import { useState } from \"react\"\r\n\r\nexport const useForm = ( inicialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState( inicialState )\r\n\r\n    const cleanInput = ( newFromState = inicialState) => {\r\n        setValues( newFromState )\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n\r\n        })\r\n    }\r\n\r\n    return [ values, handleInputChange, cleanInput ]\r\n\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { saveNoteManager, uploadManager } from '../../actions/notes'\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    const handleSaveNote = () => {\r\n\r\n        dispatch( saveNoteManager( active ) )\r\n    }\r\n\r\n    const handlePictureUpload = () => {\r\n\r\n        document.querySelector('#fileSelector').click()\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n\r\n        const file = e.target.files[0]\r\n\r\n        if( file ){\r\n            dispatch( uploadManager( file ) )\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"notes__appbar\">\r\n            <span>28 de agosto 2020</span>\r\n            <input id=\"fileSelector\" type=\"file\" name=\"file\" onChange={handleFileChange} style={{display: 'none'}} />\r\n            <div>\r\n                <button onClick={handlePictureUpload} className=\"btn\">Picture</button>\r\n                <button onClick={handleSaveNote} className=\"btn\">Save</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, deleteManager } from '../../actions/notes'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NotePage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { active:note } = useSelector(state => state.notes)\r\n\r\n    const [ formValues, handleInputChange, reset ] = useForm( note )\r\n\r\n    const { title, body } = formValues\r\n\r\n    const activeId = useRef( note.id )\r\n\r\n    useEffect(() => {\r\n\r\n        if( note.id !== activeId.current ){\r\n            reset( note )\r\n            activeId.current = note.id\r\n        }\r\n\r\n    }, [note, reset])\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( activeNote( formValues.id, { ...formValues } ) )\r\n\r\n    }, [formValues, dispatch])\r\n\r\n    const handleDelete = () => {\r\n\r\n        dispatch( deleteManager( activeId.current ) )\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"notes__main-content\">\r\n\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n                <input type=\"text\" className=\"notes__title-input\" value={title} name=\"title\" onChange={handleInputChange} placeholder=\"Some awesome title\" />\r\n                <hr className=\"mb-5\" />\r\n                <textarea className=\"notes__textarea\" value={body} name=\"body\" onChange={handleInputChange} placeholder=\"An awesome text\">\r\n\r\n                </textarea>\r\n                \r\n                {\r\n                    (note.url) &&\r\n                    <div className=\"notes__image\">\r\n                        <img src={note.url} alt=\"imagen\"/>\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={handleDelete}\r\n            >\r\n                Delete\r\n            </button>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n\r\n    return (\r\n\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br />\r\n                Or create an entry!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"/>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const setError = ( error ) => {\r\n   \r\n    return {\r\n        type: types.uiSetError,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const removeError = () => {\r\n   \r\n    return {\r\n        type: types.uiRemoveError,\r\n    }\r\n}\r\n\r\nexport const startLoading = () => {\r\n\r\n    return {\r\n        type: types.uiStartLoading,\r\n    }\r\n}\r\n\r\nexport const finishLoading = () => {\r\n\r\n    return {\r\n        type: types.uiFinishLoading,\r\n    }\r\n}\r\n","import Swal from 'sweetalert2'\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { types } from '../types/types'\r\nimport { notesLogout } from './notes';\r\nimport { finishLoading, startLoading } from './ui';\r\n\r\nexport const loginManager = (email, password) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        dispatch( startLoading() )\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then( ({ user }) => {\r\n                \r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n                \r\n                dispatch( finishLoading() )\r\n                \r\n            })            \r\n            .catch(error => {\r\n                dispatch( finishLoading() )\r\n                Swal.fire('Authentication Error', error.message, 'error')\r\n        })\r\n    }\r\n}\r\n\r\nexport const registerManager = ( email, password, name) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then( async({ user }) => {\r\n                await user.updateProfile({\r\n                    displayName: name\r\n                })\r\n\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            })\r\n            .catch(error => {\r\n                Swal.fire('User already exists', error.message, 'error')\r\n            })\r\n    }\r\n}\r\n\r\nexport const googleLoginManager = () => {\r\n    \r\n    return (dispatch) => {\r\n\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then( ({ user }) => {\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            })\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => {\r\n\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n}\r\n\r\nexport const logoutManager = () => {\r\n\r\n    return async(dispatch) => {\r\n\r\n        await firebase.auth().signOut()\r\n\r\n        dispatch( logout() )\r\n\r\n        dispatch( notesLogout() )\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n\r\n    return {\r\n        type: types.logout\r\n    }\r\n}","import React from 'react'\r\nimport moment from 'moment'\r\nimport { useDispatch } from 'react-redux'\r\nimport { activeNote } from '../../actions/notes'\r\n\r\nexport const JournalEntry = ({id, title, body, date, url}) => {\r\n    \r\n    const noteDate = moment(date)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch( activeNote(id, {title, body, date, url} ) )\r\n    }\r\n\r\n    return (\r\n        <div onClick={handleEntryClick} className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\">\r\n\r\n            {\r\n                url &&\r\n                <div \r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${url})`\r\n                    }}\r\n                >\r\n                </div>\r\n            }\r\n            \r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"jounral__entry-title\">{title}</p>\r\n                <p className=\"jounral__entry-content\">{body}</p>\r\n            </div>\r\n            \r\n            <div className=\"journal__entry-date\">\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('Do')}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { JournalEntry } from './JournalEntry'\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector(state => state.notes)\r\n\r\n    return (\r\n\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry\r\n                        key={ note.id }\r\n                        {...note}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logoutManager } from '../../actions/auth'\r\nimport { createNote } from '../../actions/notes'\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const SideBar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { name } = useSelector(state => state.auth)\r\n\r\n    const handleLogout = () => {\r\n\r\n        dispatch( logoutManager() )\r\n    }\r\n\r\n    const handleNewEntry = () => {\r\n        dispatch( createNote() )\r\n    }\r\n\r\n    return (\r\n\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\" />\r\n                    <span> {name}</span>\r\n                </h3>\r\n\r\n                <button onClick={handleLogout} className=\"btn\">Logout</button>\r\n            </div>\r\n\r\n            <div onClick={handleNewEntry} className=\"journal__new-entry\">\r\n                <i className=\"far fa-calendar-plus fa-5x\" />\r\n                <p className=\"mt-5\">New Entry</p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NotePage } from '../notes/NotePage'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { SideBar } from './SideBar'\r\n\r\nexport const JournalPage = () => {\r\n\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    return (\r\n\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n            <SideBar />\r\n            <main>\r\n                {\r\n                    (active)\r\n                    ?<NotePage />\r\n                    :<NothingSelected />\r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { googleLoginManager, loginManager } from '../../actions/auth'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const LoginPage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { loading } = useSelector(state => state.ui)\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: 'nicososa@gmail.com',\r\n        password: '123456'\r\n    })\r\n\r\n    const { email, password } = formValues\r\n\r\n    const handleLogin = (e) =>{\r\n        e.preventDefault()\r\n        \r\n        dispatch( loginManager(email, password) )\r\n    }\r\n\r\n    const googleLogin = () => {\r\n        \r\n        dispatch( googleLoginManager() )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <Fragment>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form className=\"animate__animated animate__fadeIn animate__faster\" onSubmit={ handleLogin } >\r\n                <input className=\"auth__input\" type=\"text\" name=\"email\" value={email} onChange={handleInputChange} placeholder=\"Email\" />\r\n                <input className=\"auth__input\" type=\"password\" name=\"password\" value={password} onChange={handleInputChange} placeholder=\"Password\" />\r\n\r\n                <button\r\n                    className=\"btn btn-primary btn-block\"\r\n                    type=\"submit\"\r\n                    disabled={loading}\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with Social Network</p>\r\n                    <div onClick={googleLogin} className=\"google-btn\">\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                    <Link className=\"link mt-1\" to=\"/auth/register\">Create new Account</Link>\r\n                </div>\r\n\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport validator from 'validator'\r\nimport { registerManager } from '../../actions/auth'\r\nimport { removeError, setError } from '../../actions/ui'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const RegisterPage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { msgError } = useSelector(state => state.ui)\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        name: 'Nicolas',\r\n        email: 'nicososa@gmail.com',\r\n        password: '123456',\r\n        password2: '123456'\r\n    })\r\n\r\n    const { name, email, password, password2 } = formValues\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault()\r\n        \r\n        if( isFormValid() ){\r\n            dispatch( registerManager(email, password, name))\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if( name.trim().length === 0 ){\r\n            dispatch( setError( 'Name is required' ))\r\n            return false\r\n        } else if( !validator.isEmail(email) ) {\r\n            dispatch( setError( 'Email is not correct' ))\r\n            return false\r\n        } else if( password !== password2 || password.length < 5 ){\r\n            dispatch( setError( 'Passwords missmatch' ))\r\n            return false\r\n        }\r\n\r\n        dispatch( removeError() )\r\n\r\n        return true\r\n    }\r\n\r\n    return (\r\n\r\n        <Fragment>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form className=\"animate__animated animate__fadeIn animate__faster\" onSubmit={handleRegister}>\r\n                {\r\n                    msgError &&\r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            <p>{msgError}</p>\r\n                        </div>  \r\n\r\n                    )\r\n                }\r\n\r\n                <input className=\"auth__input\" type=\"text\" name=\"name\" value={name} onChange={handleInputChange} placeholder=\"Name\" />\r\n                <input className=\"auth__input\" type=\"text\" name=\"email\" value={email} onChange={handleInputChange} placeholder=\"Email\" />\r\n                <input className=\"auth__input\" type=\"password\" name=\"password\" value={password} onChange={handleInputChange} placeholder=\"Password\" />\r\n                <input className=\"auth__input\" type=\"password2\" name=\"password2\" value={password2} onChange={handleInputChange} placeholder=\"Confirm Password\" />\r\n\r\n                <button\r\n                    className=\"btn btn-primary btn-block mt-1\"\r\n                    type=\"submit\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                <Link className=\"link mt-1\" to=\"/auth/login\">Already have an Account</Link>\r\n        \r\n\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { LoginPage } from '../components/auth/LoginPage'\r\nimport { RegisterPage } from '../components/auth/RegisterPage'\r\n\r\nexport const AuthRouter = () => {\r\n\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route exact path='/auth/login' component={ LoginPage } />\r\n                    <Route exact path='/auth/register' component={ RegisterPage } />\r\n\r\n                    <Redirect to='/auth/login' />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n\r\n    return (\r\n\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                (isAuthenticated)\r\n                    ? <Component {...props} />\r\n                    : <Redirect to=\"/auth\" />\r\n            )}\r\n\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n\r\n    return (\r\n\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                (!isAuthenticated)\r\n                    ? <Component {...props} />\r\n                    : <Redirect to=\"/\" />\r\n\r\n            )}\r\n\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom'\r\nimport { firebase } from '../firebase/firebase-config'\r\nimport { JournalPage } from '../components/journal/JournalPage'\r\nimport { AuthRouter } from './AuthRouter'\r\nimport { useDispatch } from 'react-redux'\r\nimport { login } from '../actions/auth'\r\nimport { PrivateRoute } from './PrivateRoute'\r\nimport { PublicRoute } from './PublicRoute'\r\nimport { LoadNotesManager } from '../actions/notes'\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [checking, setChecking] = useState(true)\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false)\r\n\r\n    useEffect(() => {\r\n        \r\n        firebase.auth().onAuthStateChanged( (user) => {\r\n\r\n            if( user?.uid ){\r\n                dispatch( login( user.uid, user.displayName ) )\r\n                setIsAuthenticated(true)\r\n\r\n                dispatch( LoadNotesManager( user.uid ))\r\n            } else {\r\n                setIsAuthenticated(false)\r\n            }\r\n\r\n            setChecking(false)\r\n        })\r\n    }, [dispatch, setChecking])\r\n\r\n    if( checking ) {\r\n        return (\r\n\r\n            <h1>Wait...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute path='/auth' isAuthenticated={ isAuthenticated } component={ AuthRouter } />\r\n                    <PrivateRoute exact path='/' isAuthenticated={ isAuthenticated } component={ JournalPage } />\r\n\r\n                    <Redirect to='/' />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = ( state = initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n        \r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesCreateNote:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [ ...action.payload ]\r\n            }\r\n\r\n        case types.notesUpdateNote:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n\r\n        case types.notesDeleteNote:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload)\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        \r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer'\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = ( state = {}, action) => {\r\n    \r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n            \r\n        case types.logout:\r\n            return { }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const JournalApp = () => {\r\n\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\n\nimport './styles/styles.scss'\n\nReactDOM.render(<JournalApp /> ,document.getElementById('root'));"],"sourceRoot":""}